CREATE TABLE buyTbl(
num INT ,
userID	CHAR(8)	NOT NULL,
proName	varchar(6)	NOT NULL,
groupName	VARCHAR(4),
price INT NOT NULL,
amount SMALLINT	NOT NULL,
PRIMARY KEY (num),
FOREIGN	KEY(userID)	REFERENCES	usertbl(userID)

);
외래키
===================
INSERT INTO usertbl VALUES('LSG','이승기',1987,'서울','011','1111111',182,'2008-8-8');
레코드 삽입
==================
조건검색
SELECT userID,name_ FROM usertbl WHERE birthYear>=1970 AND height >=182;--조건 검색
SELECT name_, height FROM usertbl WHERE height >=180 AND height<=183;==SELECT name_,height FROM usertbl WHERE height BETWEEN 180 AND 183;
SELECT name_,addr FROM usertbl WHERE addr IN ('경남','전남','경북');==SELECT name_,addr FROM usertbl WHERE addr='경남' OR addr='전남' OR addr='경북';
SELECT name_,height FROM usertbl WHERE name_ LIKE '김%';
SELECT name_,height FROM usertbl WHERE name_ LIKE '_종신';
SELECT name_, height FROM usertbl WHERE height >=180 AND height <=183;
SELECT name_, addr FROM usertbl WHERE addr='경남' OR addr='전남' OR addr='경북';
SELECT name_, addr FROM usertbl WHERE addr IN ('경남','전남','경북');
SELECT name_,height FROM usertbl WHERE name_ LIKE '김%';
SELECT name_,height FROM usertbl WHERE name_ LIKE '_종신';
SELECT name_, height FROM usertbl WHERE height >177;
SELECT name_, height FROM usertbl                                 
	WHERE height> (SELECT height FROM usertbl WHERE name_='김경호');
SELECT name_, height FROM usertbl
	WHERE height >= ANY (SELECT height FROM usertbl WHERE addr= '경남');
SELECT name_, height FROM usertbl                                  
	WHERE height =ANY(SELECT height FROM usertbl WHERE addr='경남');
SELECT name_, height FROM usertbl                                 
	WHERE height IN (SELECT height FROM usertbl WHERE addr='경남');
=======================
정렬 출력
SELECT name_,mDate FROM usertbl ORDER BY mDate;
SELECT name_, mDate FROM usertbl ORDER BY mDate DESC;
SELECT name_, height FROM usertbl ORDER BY height DESC, name_ ASC;
SELECT addr FROM usertbl ORDER BY addr;
SELECT DISTINCT addr FROM usertbl;

SELECT userID, name_, birthYear FROM usertbl
	ORDER BY birthYear
	OFFSET 4 ROWS;
	
=============
GROUP BY
SELECT userid, SUM(amount) FROM buytbl GROUP BY userid;
SELECT userID AS '사용자 아이', SUM(amount) AS' 총구매개수'
	FROM buytbl GROUP BY userID;
==============
SELECT AVG(amount) AS '평균 구매 개수' FROM buytbl;
SELECT AVG(amount+1.0) AS '평균 구매 개수' FROM buytbl;
SELECT AVG(CAST(amount AS DECIMAL(10,6))) AS '평균 구매 개수' FROM buytbl;
SELECT name_, MAX(height), MIN(height) FROM usertbl;
SELECT name_, MAX(height), MIN(height) FROM usertbl GROUP BY name_
SELECT name_, height                               
	FROM usertbl                                    
	WHERE height = (SELECT MAX(height)FROM usertbl) 
		OR height = (SELECT MIN(height)FROM usertbl);
SELECT userID, AVG(amount+1.0) AS '평균구매개수' FROM buytbl GROUP BY userID;
SELECT name_, MAX(height), MIN(height) FROM usertbl GROUP BY name_;
========
SELECT COUNT(*) FROM usertbl;
SELECT COUNT(mobile1) AS '휴대폰이 있는 사용자'FROM usertbl;

=======================
SELECT userID AS '사용자', SUM(price*amount) AS '총구매금액'
	FROM buytbl
	GROUP BY userID;
	
SELECT userID AS '사용자', SUM(price*amount) AS '총구매액'
	FROM buyTbl
	GROUP BY userID
	HAVING SUM(price*amount) >1000;	
===============
SELECT userID AS '사용자', SUM(price*amount) AS '총구매액'
	FROM buytbl GROUP BY userID;
SELECT addr, MAX(height) FROM usertbl GROUP BY addr;

=======================================
CREATE TABLE testTbl2
(
id INT  NOT NULL AUTO_INCREMENT PRIMARY KEY ,
userName VARCHAR(3),
age INT,
nation VARCHAR(4INSERT INTO testtbl3 VALUES (NEXT VALUE FOR idSEQ,'지민',25,DEFAULT);FAULT '대한민국');
INSERT INTO testtbl3 VALUES (NEXT VALUE FOR idSEQ,'지민',25,DEFAULT);

==========================
SELECT CAST('2020-10-19 12:35:29.123' AS DATETIME) AS 'datetime'
=========================
JOIN

INNER JOIN은 교집합이다.
SELECT * FROM buytbl
	INNER JOIN usertbl
	ON buytbl.userID=usertbl.userID
WHERE buytbl.userID='JYP';

SELECT buytbl.userID, name_ proName, addr, mobile1+mobile2 AS '연락처'
FROM buytbl
INNER JOIN usertbl
ON buytbl.userID=usertbl.userID

SELECT U.userID, U.addr
FROM usertbl AS U
WHERE EXISTS(
	SELECT *
	FROM buytbl AS B
	WHERE U.userID=B.userID);
	
=====================
CREATE TABLE stdclubTbl
(
	num INT AUTO_INCREMENT NOT NULL,
	stdName VARCHAR(10) NOT NULL,
	clubName VARCHAR(10) NOT NULL,
	PRIMARY KEY(num),
	FOREIGN KEY(stdName) REFERENCES stdtbl(stdName),
	FOREIGN KEY(clubName) REFERENCES clubtbl(clubName)
)

=======================
SELECT S.stdName, S.addr, C.clubName, C.roomNo
FROM stdtbl AS S
	INNER JOIN stdclubtbl AS SC
		ON S.stdName=SC.stdName
	INNER JOIN clubtbl AS C
		ON SC.clubName=C.clubName
	ORDER BY S.stdName;
INSERT INTO stdtbl VALUES ('김범수','경남'),('성시경','서울'),('조용필','경기'),('은지원','경북'),('바비킴','서울');	

SELECT S.stdName, S.addr, C.clubName, C.roomNo
FROM stdtbl AS S
	INNER JOIN stdclubtbl as SC
		ON S.stdName=SC.stdName
	INNER JOIN clubtbl  AS C
		ON SC.clubName=C.clubName
	ORDER BY S.stdName;
SELECT C.clubName,C.roomNo,S.stdName,S.addr
FROM stdtbl AS S
	INNER JOIN stdclubtbl AS SC
		ON SC.stdName=S.stdName
	INNER JOIN clubtbl AS C
		ON SC.clubName=C.clubName
	ORDER BY C.clubName;
=================
OUTER JOIN